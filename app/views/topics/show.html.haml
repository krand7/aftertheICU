- content_for :title, @topic.name
- content_for :description, @topic.posts.present? ? @topic.posts.first.description.truncate(155) : @topic.name

.content-header
  .container
    %h1= @topic.name
    %p
      = link_to 'Back', forum_path(@forum)
      - if current_user and current_user.admin?
        %span.white
          |
        = link_to 'Edit', edit_forum_topic_path(@forum, @topic)

.container
  .topic-posts-container
    - @topic.posts.each do |post|
      .topic-post-container
        .poster-image
          = render 'account/user_image_link', user: post.user, size: 50
        .post
          .post-header
            %h4.poster-details
              = link_to post.user.forum_name, member_path(post.user.forum_name)
              = post.is_first_post? ? "started the topic" : "replied"
            %p.small.post-time
              = post.created_at.strftime("%-d %B %Y, %-l:%M %p")
            .post-moderation
              - if current_user and current_user.moderator?
                - if post.unapproved?
                  = link_to forum_topic_post_path(@forum, @topic, post, post: {status: 'approved'}), method: :patch do
                    %i.glyphicon-glyphicon-thumbs-up Approve
                - else
                  = link_to edit_forum_topic_post_path(@forum, @topic, post),  class: 'btn btn-default btn-xs' do
                    %span.glyphicon.glyphicon-pencil
                  = link_to forum_topic_post_path(@forum, @topic, post), method: :delete, class: 'btn btn-default btn-xs' do
                    %span.glyphicon.glyphicon-trash
              - elsif current_user and current_user = post.user
                = link_to edit_forum_topic_post_path(@forum, @topic, post),  class: 'btn btn-default btn-xs' do
                  %span.glyphicon.glyphicon-pencil
          .post-content
            = render 'posts/formatted', post: post


  - @post = @topic.posts.new
  .inset
    = form_for [@forum, @topic, @post], html: { class: 'form-horizontal' } do |f|
      - if @post.errors.any?
        #error_explanation.bs-callout.bs-callout-danger
          %h4
            = pluralize(@post.errors.count, "error")
            prohibited this comment from being saved
          %ul
          - @post.errors.full_messages.each do |msg|
            %li= msg
      .new-post-container
        %ul.nav.nav-tabs
          %li.active
            %a{ href: '#write-new', data: { toggle: 'tab' } }
              Write
          %li
            %a{ href: '#preview-new', data: { toggle: 'tab', forum_id: "#{@forum.to_param}", topic_id: "#{@topic.to_param}", object: 'preview-post', post_id: 'new' } }
              Preview

        .tab-content
          #write-new.tab-pane.active
            = f.text_area :description, rows: 7, class: 'form-control'
          #preview-new.tab-pane{ style: 'min-height:154px;' }
            #preview-new.post-container
        = f.submit "Comment", class: 'btn btn-danger btn-lg btn-block', data: { disable_with: "Posting comment..." }
        %br
